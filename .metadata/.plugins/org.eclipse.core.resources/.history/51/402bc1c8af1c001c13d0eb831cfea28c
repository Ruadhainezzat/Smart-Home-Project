

#include "SPI_interface.h"
#include "DIO_interface.h"
#include "ACTUATOR_interface.h"
#include <avr/io.h>
int main (){
	/*
	 * Local variable to store the upcoming data
	 */
	unsigned char data = 0;

PORT_voidInit();

/*
 * Init SPI Module as Slave
 */
SPI_voidInitialize(2);

/*
 * Set Actuator Config Struct
 */
Actuator_ConfigType ActuatorsChannels = {
		DIO_u8_PORTA, DIO_u8_PIN6,
		DIO_u8_PORTA, DIO_u8_PIN7
};

Actuator_Init(&ActuatorsChannels);
while(1){

	data =  SPI_u8Transiver(0x55);
	PORTC = data;

	if(data == '0'){
		Actuator_SetState(0, ACTUATOR_OFF);
		Actuator_SetState(1, ACTUATOR_OFF);
	}
	else if(data == '1'){
		Actuator_SetState(0, ACTUATOR_ON);
		Actuator_SetState(1, ACTUATOR_OFF);
	}
	else if(data == '2'){
		Actuator_SetState(0, ACTUATOR_OFF);
		Actuator_SetState(1, ACTUATOR_ON);
	}
	else if(data == '3'){
		Actuator_SetState(0, ACTUATOR_ON);
		Actuator_SetState(1, ACTUATOR_ON);
	}
	else{
		/* No Action Required */
	}
}
	return 0;
}
