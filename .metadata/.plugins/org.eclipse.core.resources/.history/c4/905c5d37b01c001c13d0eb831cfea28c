
#include "SPI_interface.h"
#include "DIO_interface.h"
#include "ACTUATOR_interface.h"
#include <avr/io.h>
int main() {
	/*
	 * Local variable to store the upcoming data
	 */
	unsigned char data = 0;

	/*
	 * Init Port Module
	 */
	PORT_voidInit();

	/*
	 * Init SPI Module as Slave
	 */
	SPI_voidInitialize(2);

	/*
	 * Set Actuator Config Struct
	 */
	Actuator_ConfigType ActuatorsChannels = {
	DIO_u8_PORTA, DIO_u8_PIN6,
	DIO_u8_PORTA, DIO_u8_PIN7 };

	/*
	 * Init Actuator Module
	 */
	Actuator_Init(&ActuatorsChannels);

	/*
	 * Main Program
	 */
	while (1) {
/*
 * Receive the data from CONTROL MC
 */
		data = SPI_u8Transiver(0x55);
/*
 * Take action according to the upcomming data
 * '0' -> Actuator(0) -> OFF
 *     -> Actuator(1) -> OFF
 * '1' -> Actuator(0) -> ON
 *     -> Actuator(1) -> OFF
 * '2' -> Actuator(0) -> OFF
 *     -> Actuator(1) -> OFF
 *
 */
	if (data == '0') {
			Actuator_SetState(0, ACTUATOR_OFF);
			Actuator_SetState(1, ACTUATOR_OFF);
		} else if (data == '1') {
			Actuator_SetState(0, ACTUATOR_ON);
			Actuator_SetState(1, ACTUATOR_OFF);
		} else if (data == '2') {
			Actuator_SetState(0, ACTUATOR_OFF);
			Actuator_SetState(1, ACTUATOR_ON);
		} else if (data == '3') {
			Actuator_SetState(0, ACTUATOR_ON);
			Actuator_SetState(1, ACTUATOR_ON);
		} else {
			/* No Action Required */
		}
	}
	return 0;
}
